cmake_minimum_required(VERSION 3.6)
project(simple-raytracer)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")
set(CMAKE_CXX_FLAGS "-O3 -Wall")

find_package(GLFW 3.0.0)
if (GLFW_FOUND)
    add_definitions( -DGLFW_FOUND )
    message("- GLFW Located")
    include_directories(${GLFW_INCLUDE_DIR})
else()
    message("- GLFW not located\n->Windowed Mode Disabled")
endif()
if(GLFW_FOUND AND (GLFW_VERSION VERSION_EQUAL 3.0 OR GLFW_VERSION VERSION_GREATER 3.0))
    add_definitions( -DGLFW_VERSION_3 )
endif()

find_package(OpenGL)
if (OPENGL_FOUND)
    add_definitions( -DOPENGL_FOUND )
    message("- OpenGL Located")
    include_directories(${OPENGL_INCLUDE_DIR})
else()
    message("- OpenGL not located\n->Windowed Mode Disabled")
endif()

find_package(PNG)
if (PNG_FOUND)
    add_definitions( -DPNG_FOUND )
    message("- LibPNG Located")
    include_directories(${PNG_INCLUDE_DIRS})
    add_definitions(${PNG_DEFINITIONS})
else()
    message("- LibPNG not located\n->Image Mode Disabled")
endif()

find_package(YamlCpp REQUIRED)
message("YamlCpp found\n->Include dir: ${YAMLCPP_INCLUDE_DIR}\n->Library: ${YAMLCPP_LIBRARY}")
include_directories(${YAMLCPP_INCLUDE_DIR})
link_directories(${YAMLCPP_LIBRARY_DIR})

set(SOURCE_FILES Source/main.cpp Source/Application.cpp Source/Raymarcher.cpp Source/Includes/glad.c Source/Geometry/Sphere.cpp Source/Geometry/Vec3f.cpp Source/Geometry/Ray.cpp Source/Color.cpp Source/Scene.cpp Source/Camera.cpp Source/Util/Shader.cpp Source/ScreenBuffer.cpp Source/Lighting/LightBase.cpp Source/Geometry/Intersection.cpp Source/Geometry/Vec4f.cpp Source/ConfigManager.cpp Source/Lighting/DirectionalLight.cpp Source/ImageBuffer.cpp Source/Geometry/Plane.cpp Source/Geometry/Box.cpp)
add_executable(${CMAKE_PROJECT_NAME} ${SOURCE_FILES})
target_link_libraries(${CMAKE_PROJECT_NAME} ${YAMLCPP_LIBRARY} ${PNG_LIBRARIES} ${GLFW_LIBRARIES})
